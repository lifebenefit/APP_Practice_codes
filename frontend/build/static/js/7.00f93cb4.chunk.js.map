{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Button","props","href","React","createElement","className","size","inverse","danger","children","to","Link","exact","type","onClick","disabled","ErrorModal","Modal","onCancel","onClear","header","show","showError","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Fragment","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","isLoading","setIsLoading","useState","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","console","log","substring","httpAbortCtrl","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","Avatar","src","image","alt","width","height","UserItem","id","name","placeCount","UsersList","items","map","user","key","places","Users","loadedUsers","setLoadedUsers","users","err","fetchUsers","LoadingSpinner"],"mappings":"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","file":"static/js/7.00f93cb4.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.showError}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.showError}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from './Backdrop'\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => { event.preventDefault() }\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show ? <Backdrop onClick={props.onCancel} /> : null}\r\n      {/* {props.show && <Backdrop onClick={props.onCancel} />} <-- 어두운 배경 클릭시 Cancel 핸들러 동작*/}\r\n\r\n      <CSSTransition\r\n        in={props.show} // CSSTransition 의 in props 가 true 면 mount 하고 false면 unmount 함\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n/*\r\n{drawerIsOpen ? <Backdrop onClick={closeDrawer} /> : null}\r\n둘의 형상은 동일함 // if drawerIsOpen is True : <Backdrop onClick={closeDrawer} /> 이므로\r\n{drawerIsOpen && <Backdrop onClick={closeDrawer} />}\r\n*/\r\nexport default Modal;","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n  // [] 빈 배열의 주소값 같은거라고 생각 하면 됨. activeHttpRequests.current <- &activeHttpRequests\r\n  // useRef(); 인 경우, 주로 DOM 요소에 대한 직접적인 참조를 관리하기 위해 사용되고,\r\n  // activeHttpRequests는 컴포넌트의 상태와는 독립적으로 유지되어야 하는 변경 가능한 데이터를 관리하기 위해 사용됩니다.\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      // body 가 null 인 경우, headers 가 json 타입이면 fetch에 fail 한다.\r\n      console.log(`HTTP 요청 url --> ${method} }\\n${url.substring(0, 22)} \\n${url.substring(22, )}`);\r\n\r\n      // if (body !== null) {\r\n      //   headers = { \"Content-Type\": \"application/json\" };\r\n      // }\r\n      \r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (response.ok) {\r\n          // responseData.ok 는 상태코드가 200번대 일때 true를 반환한다\r\n          return responseData;\r\n        } else {\r\n          throw new Error(responseData.message);\r\n        }\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n        throw error;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort()); // abort 메서드를 호출하여 HTTP 요청을 취소\r\n      /**\r\n          for (let i = 0; i < activeHttpRequests.current.length; i++) {\r\n            const abortCtrl = activeHttpRequests.current[i];\r\n            abortCtrl.abort();\r\n          }\r\n       */\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n\r\n// // axios 서드파티Lib 쓰는 경우\r\n// if (isLoginMode) {\r\n//     // 로그인 모드일 때의 로직\r\n// } else {\r\n//     // 회원가입 모드일 때의 로직\r\n//     try {\r\n//         const response = await axios.post('http://localhost:5000/api/users/signup', {\r\n//             name: formState.inputs.name.value,\r\n//             email: formState.inputs.email.value,\r\n//             password: formState.inputs.password.value\r\n//         }, {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             }\r\n//         });\r\n\r\n//         const responseData = response.data;\r\n//         console.log(responseData);\r\n//         auth.login();\r\n//     } catch (err) {\r\n//         console.log(err);\r\n//     }\r\n// }\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      {/* <div className=\"user-item__content\"> */}\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={`${process.env.REACT_APP_BASE}/${props.image}`} alt={props.name} />\r\n            {/* <img src={props.image} alt={props.name} /> */}\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}</h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n      {/* </div> */}\r\n    </li >\r\n  )\r\n};\r\n\r\nexport default UserItem;","// import React from \"react\";\r\n\r\n// import UserItem from \"./UserItem\";\r\n// import './UserItem.css'\r\n\r\n// const UserList = props => {\r\n//     if (props.items.length == 0) {\r\n//         return (\r\n//             <div className=\"center\">\r\n//                 <h2>등록된 User 없음</h2>\r\n//             </div>\r\n//         );\r\n//     } else {\r\n//         return (\r\n//             <ul>\r\n//                 {props.items.map(user => {\r\n//                     return <UserItem />;\r\n//                 })}\r\n//             </ul>\r\n//         );\r\n//     };\r\n// };\r\n\r\n// export default UserList;\r\nimport React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>등록된 User 없음</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BASE}${process.env.REACT_APP_USERS_ROUTE}${process.env.REACT_APP_ROOT}`\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) { }\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal showError={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}