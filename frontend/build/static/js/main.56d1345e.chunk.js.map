{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","React","createElement","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","NavLink","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","drawerIsOpen","setDrawerIsOpen","useState","closeDrawerHandler","Fragment","openDrawerHandler","Link","logoutTimer","Users","lazy","UserPlaces","NewPlace","UpdatePlace","Auth","App","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","expirationDate","jwtDecodedData","jwtDecode","renewedDate","Date","getTime","expireTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"4GAAA,6CAEO,MAAMA,EAAcC,wBAAc,CACvCC,YAAY,EACZC,MAAO,KACPC,OAAQ,KACRC,MAAOA,OACPC,OAAQA,U,8BCPV,0BAYeC,IARQC,GAEnBC,IAAAC,cAAA,OAAKC,UAAW,IAAGH,EAAMI,WAAa,6BACpCH,IAAAC,cAAA,OAAKC,UAAU,oB,6BCPrB,0CAYeE,IAPEL,GACRM,IAASC,aACdN,IAAAC,cAAA,OAAKC,UAAU,WAAWK,QAASR,EAAMQ,UACzCC,SAASC,eAAe,mB,kRCEbC,MANIX,GACPC,IAAAC,cAAA,UAAQC,UAAU,eACrBH,EAAMY,SAAS,M,cCkCTC,MAjCEb,IACb,MAAMc,EAAOC,qBAAWvB,KAExB,OACIS,IAAAC,cAAA,MAAIC,UAAU,aACVF,IAAAC,cAAA,UACID,IAAAC,cAACc,IAAO,CAACC,GAAG,IAAIC,OAAK,GAAC,eAEzBJ,EAAKpB,YACFO,IAAAC,cAAA,UACID,IAAAC,cAACc,IAAO,CAACC,GAAI,IAAIH,EAAKlB,iBAAiB,eAG9CkB,EAAKpB,YACFO,IAAAC,cAAA,UACID,IAAAC,cAACc,IAAO,CAACC,GAAG,eAAc,iBAGhCH,EAAKpB,YACHO,IAAAC,cAAA,UACID,IAAAC,cAACc,IAAO,CAACC,GAAG,SAAQ,kBAG3BH,EAAKpB,YACFO,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAQM,QAASM,EAAKhB,QAAQ,a,cCNnCqB,MApBInB,IACf,MAAMoB,EACFnB,IAAAC,cAACmB,IAAa,CACVC,GAAItB,EAAMuB,KACVC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,GAEb1B,IAAAC,cAAA,SAAOC,UAAU,cAAcK,QAASR,EAAMQ,SACzCR,EAAMY,WAKnB,OACIN,IAASC,aAAaa,EAASX,SAASC,eAAe,iB,cCoDhDkB,MAhEQ5B,IACtB,MAAO6B,EAAcC,GAAmBC,oBAAS,GAM3CC,EAAqBA,KAC1BF,GAAgB,IAEjB,OACC7B,IAAAC,cAACD,IAAMgC,SAAQ,KACbJ,GAAgB5B,IAAAC,cAACG,IAAQ,CAACG,QAASwB,IACpC/B,IAAAC,cAACiB,EAAU,CAACI,KAAMM,EAAcrB,QAASwB,GACxC/B,IAAAC,cAAA,OAAKC,UAAU,+BACdF,IAAAC,cAACW,EAAQ,QAIXZ,IAAAC,cAACS,EAAU,KAEVV,IAAAC,cAAA,UAAQC,UAAU,4BAA4BK,QAlBvB0B,KACzBJ,GAAgB,KAkBb7B,IAAAC,cAAA,aACAD,IAAAC,cAAA,aACAD,IAAAC,cAAA,cAEDD,IAAAC,cAAA,MAAIC,UAAU,0BACbF,IAAAC,cAACiC,IAAI,CAAClB,GAAG,KAAI,gBAEdhB,IAAAC,cAAA,OAAKC,UAAU,+BACdF,IAAAC,cAACW,EAAQ,U,QCrCd,IAAIuB,E,YCYJ,MAAMC,EAAQpC,IAAMqC,KAAK,IAAM,8BACzBC,EAAatC,IAAMqC,KAAK,IAAM,8BAC9BE,EAAWvC,IAAMqC,KAAK,IAAM,8BAC5BG,EAAcxC,IAAMqC,KAAK,IAAM,8BAC/BI,EAAOzC,IAAMqC,KAAK,IAAM,8BAoFfK,MA1EHA,KACV,MAAM,OAAE/C,EAAM,MAAED,EAAK,MAAEE,EAAK,OAAEC,GDzBT8C,MACrB,MAAOjD,EAAOkD,GAAYd,oBAAS,IAC5Be,EAAqBC,GAA0BhB,sBAC/CnC,EAAQoD,GAAajB,oBAAS,GAE/BlC,EAAQoD,sBAAY,CAACrD,EAAQD,EAAOuD,KACxCL,EAASlD,GACTqD,EAAUpD,GACV,MAAMuD,EAAiBC,YAAUzD,GAE3B0D,EACJH,GAAkB,IAAII,MAAK,IAAIA,MAAOC,UAAYJ,EAAeK,YACnET,EAAuBM,GAEvBI,aAAaC,QAAQ,WAAYC,KAAKC,UAAU,CAC9ChE,SACAD,QACAkE,WAAYR,EAAYS,kBAEzB,IAEGhE,EAASmD,sBAAY,KACzBJ,EAAS,MACTE,EAAuB,MACvBC,EAAU,MAEVS,aAAaM,WAAW,aACvB,IAsBH,OApBAC,oBAAU,KACR,GAAIrE,GAASmD,EAAqB,CAChC,MAAMmB,EAAgBnB,EAAoBS,WAAY,IAAID,MAAOC,UACjEnB,EAAc8B,WAAWpE,EAAQmE,QAEjCE,aAAa/B,IAEd,CAACzC,EAAOG,EAAQgD,IAEnBkB,oBAAU,KACR,MAAMI,EAAaT,KAAKU,MAAMZ,aAAaa,QAAQ,aAEjDF,GACAA,EAAWzE,OACV,IAAI2D,KAAKc,EAAWP,YAAc,IAAIP,MAEvCzD,EAAMuE,EAAWxE,OAAQwE,EAAWzE,MAAO,IAAI2D,KAAKc,EAAWP,cAEhE,CAAChE,IAEG,CAAED,SAAQD,QAAOE,QAAOC,WCxBU8C,GAEzC,IAAI2B,EA8CJ,OA1CEA,EAFE5E,EAGAM,IAAAC,cAACsE,IAAM,KACLvE,IAAAC,cAACuE,IAAK,CAACC,KAAK,IAAIxD,OAAO,GACrBjB,IAAAC,cAACmC,EAAK,OAERpC,IAAAC,cAACuE,IAAK,CAACC,KAAK,kBAAkBxD,OAAK,GACjCjB,IAAAC,cAACqC,EAAU,OAEbtC,IAAAC,cAACuE,IAAK,CAACC,KAAK,cAAcxD,OAAK,GAC7BjB,IAAAC,cAACsC,EAAQ,OAOXvC,IAAAC,cAACuE,IAAK,CAACC,KAAK,oBACVzE,IAAAC,cAACuC,EAAW,OAGdxC,IAAAC,cAACyE,IAAQ,CAAC1D,GAAG,OAMfhB,IAAAC,cAACsE,IAAM,KACLvE,IAAAC,cAACuE,IAAK,CAACC,KAAK,IAAIxD,OAAO,GACrBjB,IAAAC,cAACmC,EAAK,OAERpC,IAAAC,cAACuE,IAAK,CAACC,KAAK,kBAAkBxD,OAAK,GACjCjB,IAAAC,cAACqC,EAAU,OAEbtC,IAAAC,cAACuE,IAAK,CAACC,KAAK,SACVzE,IAAAC,cAACwC,EAAI,OAEPzC,IAAAC,cAACyE,IAAQ,CAAC1D,GAAG,WAOjBhB,IAAAC,cAACV,IAAYoF,SAAQ,CAACC,MAAO,CAC3BnF,aAAcC,EACdA,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPC,OAAQA,IAERG,IAAAC,cAAC4E,IAAM,KACL7E,IAAAC,cAAC0B,EAAc,MACf3B,IAAAC,cAAA,YACED,IAAAC,cAAC6E,WAAQ,CACPC,SACE/E,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAACH,IAAc,QAGlBwE,OCzFbjE,IAAS2E,OAAOhF,IAAAC,cAACyC,EAAG,MAAKlC,SAASC,eAAe,W","file":"static/js/main.56d1345e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {}\r\n});","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return (<header className=\"main-header\">\r\n        {props.children}  {/* 부모 컴포넌트로부터 전달된 children을 렌더링 */}\r\n    </header>);\r\n};\r\n\r\nexport default MainHeader;","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport './NavLinks.css'\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to='/' exact> ALL USERS</NavLink>\r\n            </li>\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to={`/${auth.userId}/places`}> My Places</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to='/places/new'> Add Places</NavLink>\r\n                </li>\r\n            )}\r\n            {!auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to='/auth'> Authenticate</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn &&\r\n                <li>\r\n                    <button onClick={auth.logout}>\r\n                        Logout\r\n                    </button>\r\n                </li>}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavLinks;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n    const content = (\r\n        <CSSTransition\r\n            in={props.show}\r\n            timeout={200}\r\n            classNames=\"slide-in-left\"\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <aside className=\"side-drawer\" onClick={props.onClick}>\r\n                {props.children}\r\n            </aside>\r\n        </CSSTransition>\r\n    );\r\n\r\n    return (\r\n        ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"))\r\n    );\r\n};\r\n\r\nexport default SideDrawer;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport './MainNavigation.css';\r\n\r\n\r\nconst MainNavigation = props => {\r\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n\tconst openDrawerHandler = () => {\r\n\t\tsetDrawerIsOpen(true);\r\n\t};\r\n\r\n\tconst closeDrawerHandler = () => {\r\n\t\tsetDrawerIsOpen(false);\r\n\t};\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n\t\t\t<SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n\t\t\t\t<nav className=\"main-navigation__drawer-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</SideDrawer>\r\n\t\t\t{/* // <h1>부모 컴포넌트</h1> <<-- 부모 컴포넌트 구역 */}\r\n\t\t\t<MainHeader>\r\n\t\t\t\t{/* <p>MainHeader 태그 안쪽의 코드는 MainHeader(자식) 컴포넌트 구역을 렌더링 한다.</p> */}\r\n\t\t\t\t<button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t</button>\r\n\t\t\t\t<h1 className=\"main-navigation__title\">\r\n\t\t\t\t\t<Link to=\"/\">Your Places</Link>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</MainHeader>\r\n\t\t</React.Fragment>\r\n\t)\r\n\r\n\t// return (\r\n\t//     <React.Fragment>\r\n\t//         {drawerIsOpen ? <Backdrop onClick={closeDrawer} /> : null}\r\n\t//         {drawerIsOpen && <Backdrop />}\r\n\t//         {drawerIsOpen ? (<SideDrawer>\r\n\t//             <nav className=\"main-navigation__drawer-nav\">\r\n\t//                 <NavLinks />\r\n\t//             </nav>\r\n\t//         </SideDrawer>) : null}\r\n\t//         {/* // <h1>부모 컴포넌트</h1> <<-- 부모 컴포넌트 구역 */}\r\n\t//         <MainHeader>\r\n\t//             {/* <p>MainHeader 태그 안쪽의 코드는 MainHeader(자식) 컴포넌트 구역을 렌더링 한다.</p> */}\r\n\t//             <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\r\n\t//                 <span />\r\n\t//                 <span />\r\n\t//                 <span />\r\n\t//             </button>\r\n\t//             <h1 className=\"main-navigation__title\">\r\n\t//                 <Link to=\"/\">Your Places</Link>\r\n\t//             </h1>\r\n\t//             <nav className=\"main-navigation__header-nav\">\r\n\t//                 <NavLinks />\r\n\t//             </nav>\r\n\t//         </MainHeader>\r\n\t//     </React.Fragment>\r\n\t// )\r\n};\r\n\r\nexport default MainNavigation;","import { useState, useCallback, useEffect } from \"react\";\r\nimport {jwtDecode} from 'jwt-decode';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((userId, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(userId);\r\n    const jwtDecodedData = jwtDecode(token);\r\n    \r\n    const renewedDate =\r\n      expirationDate || new Date(new Date().getTime() + jwtDecodedData.expireTime);\r\n    setTokenExpirationDate(renewedDate);\r\n\r\n    localStorage.setItem(\"userData\", JSON.stringify({\r\n      userId,\r\n      token,\r\n      expiration: renewedDate.toISOString()\r\n    }));\r\n  }, [])\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    // console.log('Logout')\r\n    localStorage.removeItem(\"userData\");\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      (new Date(storedData.expiration) > new Date())\r\n    ) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login])\r\n\r\n  return { userId, token, login, logout};\r\n};","import React, { Suspense } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\n// import Users        from './user/pages/Users';\r\n// import UserPlaces   from './places/pages/UserPlaces';\r\n// import NewPlace     from './places/pages/NewPlace';\r\n// import UpdatePlace  from './places/pages/UpdatePlace';\r\n// import Auth         from './user/pages/Auth';\r\n\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport { useAuth } from './shared/hooks/auth-hook';\r\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\nconst Users = React.lazy(() => import('./user/pages/Users'));\r\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\r\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\r\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\r\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\r\n\r\n\r\n\r\n\r\n\r\n// function App() {\r\n//   return <h1>Let's start!</h1>;\r\n// }\r\n\r\nconst App = () => {\r\n  const { userId, token, login, logout } = useAuth();\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n    /** 로그인 중일 때 */\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact={true}>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        {/* <Route path=\"/places/new\" element={<NewPlace />} /> */}\r\n        {/* /places/new 링크에서 new가 placeId로 인식되기 때문에\r\n        /places/new 와 /places/:placeId 둘다 렌더링 된다.\r\n        이를 해결 하기 위해서는 <Switch>태그를 사용해 조건에 부합하는\r\n        하나의링크만 렌더링 되게끔 해야 한다. */}\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        {/* 위에 정의된 경로 외에 경로는 전부 '/'로 향하게 한다. */}\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    /** 로그인 중이 아닐 때 */\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact={true}>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  // return <h1>Let's start!</h1>;\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      isLoggedIn: !!token,\r\n      token: token,\r\n      userId: userId,\r\n      login: login,\r\n      logout: logout\r\n    }}>\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense\r\n            fallback={\r\n              <div className=\"center\">\r\n                <LoadingSpinner />\r\n              </div>\r\n            }>\r\n            {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}