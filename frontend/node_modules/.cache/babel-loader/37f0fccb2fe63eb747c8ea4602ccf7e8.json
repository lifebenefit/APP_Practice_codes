{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IMWONHYEOK\\\\study\\\\react\\\\section_10\\\\frontend\\\\src\\\\shared\\\\components\\\\UIElements\\\\Map.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport './Map.css';\nconst Map = props => {\n  const mapRef = useRef();\n  const {\n    center,\n    zoom\n  } = props;\n  // const [center, zoom] = [props.center, props.zoom];\n  // const { center, zoom } = { center: props.center, zoom: props.zoom };\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n    new window.google.maps.Marker({\n      position: center,\n      map: map\n    });\n  }, [center, zoom]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapRef,\n    className: `map \n      ${props.className} \n      style={props.style}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n};\nexport default Map;\n\n// /**\n//  * 설명:\n//  * 1. useRef()함수로 참조변수(inputRef) 생성\n//  * 2. 참조변수(inputRef)를 input 태그의 ref 속성에 대입하여 input 태그의 DOM 요소에 직접 접근을 가능하게 함\n//  * 3. [입력 필드에 포커스] 버튼 Click 시, focusInput 함수 실행\n//  * 4. inputRef.current.focus(); 함수로 input 태그에 포커싱\n//  * \n//  * 동작 : [입력 필드에 포커스]라는 버튼을 눌렀는데, \n//  * [여기에 입력] 이라는 text 필드에 커서(포커스)가 생기도록함\n//  */\n\n// import React, { useRef } from 'react';\n\n// const FocusInput = () => {\n//   // useRef를 사용하여 inputRef라는 변수를 생성합니다.\n//   const inputRef = useRef();\n\n//   const focusInput = () => {\n//     // inputRef.current는 해당 input 요소를 참조합니다.\n//     // focus() 메서드를 호출하여 입력 필드에 포커스를 줍니다.\n//     inputRef.current.focus();\n//   };\n\n//   return (\n//     <div>\n//       {/* input 요소에 ref 속성을 설정하여 inputRef와 연결합니다. */}\n//       <input ref={inputRef} type=\"text\" placeholder=\"여기에 입력\" />\n//       <button onClick={focusInput}>입력 필드에 포커스</button>\n//     </div>\n//   );\n// };\n\n// export default FocusInput;","map":{"version":3,"names":["React","useRef","useEffect","Map","props","mapRef","center","zoom","map","window","google","maps","current","Marker","position","createElement","ref","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/IMWONHYEOK/study/react/section_10/frontend/src/shared/components/UIElements/Map.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nimport './Map.css'\n\nconst Map = props => {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n  // const [center, zoom] = [props.center, props.zoom];\n  // const { center, zoom } = { center: props.center, zoom: props.zoom };\n\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n\n    new window.google.maps.Marker(\n      {\n        position: center,\n        map: map\n      }\n    );\n  }, [center, zoom])\n\n  return (\n    <div ref={mapRef}\n      className={`map \n      ${props.className} \n      style={props.style}`}\n    ></div>\n  );\n}\nexport default Map;\n\n\n\n\n// /**\n//  * 설명:\n//  * 1. useRef()함수로 참조변수(inputRef) 생성\n//  * 2. 참조변수(inputRef)를 input 태그의 ref 속성에 대입하여 input 태그의 DOM 요소에 직접 접근을 가능하게 함\n//  * 3. [입력 필드에 포커스] 버튼 Click 시, focusInput 함수 실행\n//  * 4. inputRef.current.focus(); 함수로 input 태그에 포커싱\n//  * \n//  * 동작 : [입력 필드에 포커스]라는 버튼을 눌렀는데, \n//  * [여기에 입력] 이라는 text 필드에 커서(포커스)가 생기도록함\n//  */\n\n// import React, { useRef } from 'react';\n\n// const FocusInput = () => {\n//   // useRef를 사용하여 inputRef라는 변수를 생성합니다.\n//   const inputRef = useRef();\n\n//   const focusInput = () => {\n//     // inputRef.current는 해당 input 요소를 참조합니다.\n//     // focus() 메서드를 호출하여 입력 필드에 포커스를 줍니다.\n//     inputRef.current.focus();\n//   };\n\n//   return (\n//     <div>\n//       {/* input 요소에 ref 속성을 설정하여 inputRef와 연결합니다. */}\n//       <input ref={inputRef} type=\"text\" placeholder=\"여기에 입력\" />\n//       <button onClick={focusInput}>입력 필드에 포커스</button>\n//     </div>\n//   );\n// };\n\n// export default FocusInput;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEhD,OAAO,WAAW;AAElB,MAAMC,GAAG,GAAGC,KAAK,IAAI;EACnB,MAAMC,MAAM,GAAGJ,MAAM,CAAC,CAAC;EAEvB,MAAM;IAAEK,MAAM;IAAEC;EAAK,CAAC,GAAGH,KAAK;EAC9B;EACA;;EAGAF,SAAS,CAAC,MAAM;IACd,MAAMM,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACR,GAAG,CAACE,MAAM,CAACO,OAAO,EAAE;MACrDN,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEA;IACR,CAAC,CAAC;IAEF,IAAIE,MAAM,CAACC,MAAM,CAACC,IAAI,CAACE,MAAM,CAC3B;MACEC,QAAQ,EAAER,MAAM;MAChBE,GAAG,EAAEA;IACP,CACF,CAAC;EACH,CAAC,EAAE,CAACF,MAAM,EAAEC,IAAI,CAAC,CAAC;EAElB,oBACEP,KAAA,CAAAe,aAAA;IAAKC,GAAG,EAAEX,MAAO;IACfY,SAAS,EAAE;AACjB,QAAQb,KAAK,CAACa,SAAS;AACvB,0BAA2B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjB,CAAC;AAEX,CAAC;AACD,eAAepB,GAAG;;AAKlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}