{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IMWONHYEOK\\\\study\\\\react\\\\section_12\\\\frontend\\\\src\\\\shared\\\\components\\\\FormElements\\\\ImageUpload.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport './ImageUpload.css';\nconst ImageUpload = props => {\n  const [filePath, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!filePath) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(filePath);\n  }, [filePath]);\n  const pickedHandler = event => {\n    // console.log(event.target.files);\n    // console.log(Object.keys(event.target)); // 이벤트 객체의 프로퍼티 이름들을 배열로 출력\n    console.dir(event.target.files);\n    console.dir(event.target); // 이벤트 객체를 트리 구조로 출력\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n      /**\n       * setState 함수(예: setIsValid)는 상태를 즉시 업데이트하는 것이 아니라, \n       * 상태 업데이트를 예약하는 역할을 하기 때문에, 상태가 즉시 변경되지 않고 \n       * 다음 렌더링 사이클에서 변경되므로 \"fileIsValid = true;\" 이렇게 정의해서 넘김\n       */\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    ref: filePickerRef,\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    accept: \".jpg,.png,.jpeg\",\n    onChange: pickedHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `image-upload ${props.center && 'center'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-upload__preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, previewUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: previewUrl,\n    alt: \"Preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }\n  }), !previewUrl && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }\n  }, \"Please pick an image.\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: pickImageHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"PICK IMAGE\")), !isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }\n  }, props.errorText));\n};\nexport default ImageUpload;","map":{"version":3,"names":["React","useRef","useState","useEffect","Button","ImageUpload","props","filePath","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","console","dir","target","files","pickedFile","fileIsValid","length","onInput","id","pickImageHandler","current","click","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","display","type","accept","onChange","center","src","alt","onClick","errorText"],"sources":["C:/Users/IMWONHYEOK/study/react/section_12/frontend/src/shared/components/FormElements/ImageUpload.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [filePath, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!filePath) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(filePath);\n  }, [filePath])\n\n  const pickedHandler = (event) => {\n    // console.log(event.target.files);\n    // console.log(Object.keys(event.target)); // 이벤트 객체의 프로퍼티 이름들을 배열로 출력\n    console.dir(event.target.files);\n    console.dir(event.target); // 이벤트 객체를 트리 구조로 출력\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n      /**\n       * setState 함수(예: setIsValid)는 상태를 즉시 업데이트하는 것이 아니라, \n       * 상태 업데이트를 예약하는 역할을 하기 때문에, 상태가 즉시 변경되지 않고 \n       * 다음 렌더링 사이클에서 변경되므로 \"fileIsValid = true;\" 이렇게 정의해서 넘김\n       */\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type='file'\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`} >\n        <div className=\"image-upload__preview\">\n        {/* <React.Fragment> */}\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        {/* </React.Fragment> */}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  )\n};\n\nexport default ImageUpload;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}