{"ast":null,"code":"import { useState, useCallback, useEffect } from \"react\";\nimport { jwtDecode } from 'jwt-decode';\nlet logoutTimer;\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const login = useCallback((userId, token, expirationDate) => {\n    setToken(token);\n    setUserId(userId);\n    const expiresIn = jwtDecode(token);\n    const aa = expiresIn.exp * 1000;\n    // console.log(\"token : \" + token);\n    // console.log(\"userId : \" + userId);\n    const renewedDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    // const renewedDate =\n    //   expirationDate || new Date(new Date().getTime() + Int(token.expiresIn));\n    setTokenExpirationDate(renewedDate);\n    console.log(\"문이루 : \" + new Date(new Date().getTime() + 1000 * 60 * 60));\n    console.log(\"문이루 : \" + expirationDate);\n    console.log(\"문이루 : \" + renewedDate);\n    console.log(\"문이루 : \" + renewedDate.toISOString());\n    console.log(\"토큰 : \" + token);\n    console.dir(token);\n    console.dir(expiresIn);\n    console.dir(expiresIn.exp);\n    console.dir(aa);\n    console.dir(new Date(expiresIn.exp * 1000));\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId,\n      token,\n      expiration: renewedDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    // console.log('Logout')\n    localStorage.removeItem(\"userData\");\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    userId,\n    token,\n    login,\n    logout\n  };\n};","map":{"version":3,"names":["useState","useCallback","useEffect","jwtDecode","logoutTimer","useAuth","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","login","expirationDate","expiresIn","aa","exp","renewedDate","Date","getTime","console","log","toISOString","dir","localStorage","setItem","JSON","stringify","expiration","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["C:/Users/IMWONHYEOK/study/react/section_12/frontend/src/shared/hooks/auth-hook.js"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport {jwtDecode} from 'jwt-decode';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((userId, token, expirationDate) => {\n    setToken(token);\n    setUserId(userId);\n    const expiresIn = jwtDecode(token);\n    const aa = expiresIn.exp * 1000;\n    // console.log(\"token : \" + token);\n    // console.log(\"userId : \" + userId);\n    const renewedDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    // const renewedDate =\n    //   expirationDate || new Date(new Date().getTime() + Int(token.expiresIn));\n    setTokenExpirationDate(renewedDate);\n    console.log(\"문이루 : \" + new Date(new Date().getTime() + 1000 * 60 * 60));\n    console.log(\"문이루 : \" + expirationDate);\n    console.log(\"문이루 : \" + renewedDate);\n    console.log(\"문이루 : \" + renewedDate.toISOString());\n    console.log(\"토큰 : \" + token);\n    console.dir(token);\n    console.dir(expiresIn);\n    console.dir(expiresIn.exp);\n    console.dir(aa);\n    console.dir(new Date(expiresIn.exp * 1000));\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId,\n      token,\n      expiration: renewedDate.toISOString()\n    }));\n  }, [])\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    // console.log('Logout')\n    localStorage.removeItem(\"userData\");\n  }, [])\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      (new Date(storedData.expiration) > new Date())\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login])\n\n  return { userId, token, login, logout};\n};"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD,SAAQC,SAAS,QAAO,YAAY;AAEpC,IAAIC,WAAW;AAEf,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACQ,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAChE,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,KAAK,GAAGX,WAAW,CAAC,CAACS,MAAM,EAAEJ,KAAK,EAAEO,cAAc,KAAK;IAC3DN,QAAQ,CAACD,KAAK,CAAC;IACfK,SAAS,CAACD,MAAM,CAAC;IACjB,MAAMI,SAAS,GAAGX,SAAS,CAACG,KAAK,CAAC;IAClC,MAAMS,EAAE,GAAGD,SAAS,CAACE,GAAG,GAAG,IAAI;IAC/B;IACA;IACA,MAAMC,WAAW,GACfJ,cAAc,IAAI,IAAIK,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACnE;IACA;IACAV,sBAAsB,CAACQ,WAAW,CAAC;IACnCG,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAG,IAAIH,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACvEC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGR,cAAc,CAAC;IACtCO,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGJ,WAAW,CAAC;IACnCG,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGJ,WAAW,CAACK,WAAW,CAAC,CAAC,CAAC;IACjDF,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGf,KAAK,CAAC;IAC5Bc,OAAO,CAACG,GAAG,CAACjB,KAAK,CAAC;IAClBc,OAAO,CAACG,GAAG,CAACT,SAAS,CAAC;IACtBM,OAAO,CAACG,GAAG,CAACT,SAAS,CAACE,GAAG,CAAC;IAC1BI,OAAO,CAACG,GAAG,CAACR,EAAE,CAAC;IACfK,OAAO,CAACG,GAAG,CAAC,IAAIL,IAAI,CAACJ,SAAS,CAACE,GAAG,GAAG,IAAI,CAAC,CAAC;IAC3CQ,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC;MAC9CjB,MAAM;MACNJ,KAAK;MACLsB,UAAU,EAAEX,WAAW,CAACK,WAAW,CAAC;IACtC,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,MAAM,GAAG5B,WAAW,CAAC,MAAM;IAC/BM,QAAQ,CAAC,IAAI,CAAC;IACdE,sBAAsB,CAAC,IAAI,CAAC;IAC5BE,SAAS,CAAC,IAAI,CAAC;IACf;IACAa,YAAY,CAACM,UAAU,CAAC,UAAU,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACd,IAAII,KAAK,IAAIE,mBAAmB,EAAE;MAChC,MAAMuB,aAAa,GAAGvB,mBAAmB,CAACW,OAAO,CAAC,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAC1Ef,WAAW,GAAG4B,UAAU,CAACH,MAAM,EAAEE,aAAa,CAAC;IACjD,CAAC,MAAM;MACLE,YAAY,CAAC7B,WAAW,CAAC;IAC3B;EACF,CAAC,EAAE,CAACE,KAAK,EAAEuB,MAAM,EAAErB,mBAAmB,CAAC,CAAC;EAExCN,SAAS,CAAC,MAAM;IACd,MAAMgC,UAAU,GAAGR,IAAI,CAACS,KAAK,CAACX,YAAY,CAACY,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/D,IACEF,UAAU,IACVA,UAAU,CAAC5B,KAAK,IACf,IAAIY,IAAI,CAACgB,UAAU,CAACN,UAAU,CAAC,GAAG,IAAIV,IAAI,CAAC,CAAE,EAC9C;MACAN,KAAK,CAACsB,UAAU,CAACxB,MAAM,EAAEwB,UAAU,CAAC5B,KAAK,EAAE,IAAIY,IAAI,CAACgB,UAAU,CAACN,UAAU,CAAC,CAAC;IAC7E;EACF,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEX,OAAO;IAAEF,MAAM;IAAEJ,KAAK;IAAEM,KAAK;IAAEiB;EAAM,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}